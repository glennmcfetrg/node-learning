const {readFile, writeFile} = require('fs');
//const { reject } = require('lodash');
const util = require('util');
const readFilePromise = util.promisify(readFile);
const writeFilePromise = util.promisify(writeFile);

// const getText = (path) => {
//     return new Promise((resolve, reject) => {
//         readFile(path, 'utf8', (err, data) => {
//             if (err) {
//                 reject(err);
//             }else{
//                 resolve(data);
//             }
//         });
//     });
// };

// getText('./content/first.txt').then((result) => {
//     console.log(result);
// }).catch((err) => {
//     console.log(err);
// });

//refactor the code above to use async await




const start = async() =>{
    try {
        const first = await readFilePromise('./content/first.txt', 'utf8');
        const second = await readFilePromise('./content/second.txt', 'utf8');
        await writeFilePromise('./content/result-mind-grenade.txt', `This is awesome : ${first} ${second}`);
        console.log(first, second);
    } catch (err) {
        console.log(err);
    }
};

start();



// readFile('./content/first.txt', 'utf8', (err, result) => {
//     if (err) {
//         console.log(err);
//         return;
//     }else{
//         console.log(result);
//     }
// });